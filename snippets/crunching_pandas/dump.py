#! python3
import pandas as pd

data = """
MeteringpointID,AT9990000991100000000000209351633,AT9990000991100000000000209351633,AT9990000991100000000000209351633,AT9990000991100000000000209351644,AT9990000991100000000000209351644,AT9990000991100000000000209351644,AT9990000991100000000007000091655,AT9990000991100000000007000091655,AT9990000991100000000007000091655,AT9990000991100000000099000003411,TOTAL,TOTAL,TOTAL
01.01.2021 00:00:00,0.662000,0.000000,0.000000,0.418000,0.000000,0.000000,0.398000,0.000000,0.000000,0.000000,1.478000,0.000000,0.000000
01.01.2021 00:15:00,0.678000,0.000000,0.000000,0.418000,0.000000,0.000000,0.404000,0.000000,0.000000,0.000000,1.500000,0.000000,0.000000
01.01.2021 00:30:00,0.214000,0.000000,0.000000,0.424000,0.000000,0.000000,0.407000,0.000000,0.000000,0.000000,1.045000,0.000000,0.000000
01.01.2021 00:45:00,0.070000,0.000000,0.000000,0.439000,0.000000,0.000000,0.403000,0.000000,0.000000,0.000000,0.912000,0.000000,0.000000
01.01.2021 01:00:00,0.063000,0.000000,0.000000,0.025000,0.000000,0.000000,0.411000,0.000000,0.000000,0.000000,0.499000,0.000000,0.000000
01.01.2021 01:15:00,0.082000,0.000000,0.000000,0.050000,0.000000,0.000000,0.439000,0.000000,0.000000,0.000000,0.571000,0.000000,0.000000
01.01.2021 01:30:00,0.112000,0.000000,0.000000,0.050000,0.000000,0.000000,0.393000,0.000000,0.000000,0.000000,0.555000,0.000000,0.000000
01.01.2021 01:45:00,0.114000,0.000000,0.000000,0.050000,0.000000,0.000000,0.403000,0.000000,0.000000,0.000000,0.567000,0.000000,0.000000
01.01.2021 02:00:00,0.085000,0.000000,0.000000,0.049000,0.000000,0.000000,0.406000,0.000000,0.000000,0.000000,0.540000,0.000000,0.000000
01.01.2021 02:15:00,0.080000,0.000000,0.000000,0.050000,0.000000,0.000000,0.402000,0.000000,0.000000,0.000000,0.532000,0.000000,0.000000
01.01.2021 02:30:00,0.064000,0.000000,0.000000,0.041000,0.000000,0.000000,0.442000,0.000000,0.000000,0.000000,0.547000,0.000000,0.000000
01.01.2021 02:45:00,0.114000,0.000000,0.000000,0.071000,0.000000,0.000000,0.401000,0.000000,0.000000,0.000000,0.586000,0.000000,0.000000
01.01.2021 03:00:00,0.055000,0.000000,0.000000,0.230000,0.000000,0.000000,0.392000,0.000000,0.000000,0.000000,0.677000,0.000000,0.000000
01.01.2021 03:15:00,0.245000,0.000000,0.000000,0.008000,0.000000,0.000000,0.354000,0.000000,0.000000,0.000000,0.607000,0.000000,0.000000
01.01.2021 03:30:00,0.064000,0.000000,0.000000,0.007000,0.000000,0.000000,0.354000,0.000000,0.000000,0.000000,0.425000,0.000000,0.000000
01.01.2021 03:45:00,0.080000,0.000000,0.000000,0.007000,0.000000,0.000000,0.364000,0.000000,0.000000,0.000000,0.451000,0.000000,0.000000
01.01.2021 04:00:00,0.094000,0.000000,0.000000,0.010000,0.000000,0.000000,0.358000,0.000000,0.000000,0.000000,0.462000,0.000000,0.000000
01.01.2021 04:15:00,0.095000,0.000000,0.000000,0.156000,0.000000,0.000000,0.354000,0.000000,0.000000,0.000000,0.605000,0.000000,0.000000
01.01.2021 04:30:00,0.242000,0.000000,0.000000,0.076000,0.000000,0.000000,0.351000,0.000000,0.000000,0.000000,0.669000,0.000000,0.000000
01.01.2021 04:45:00,0.060000,0.000000,0.000000,0.005000,0.000000,0.000000,0.134000,0.000000,0.000000,0.000000,0.199000,0.000000,0.000000
01.01.2021 05:00:00,0.092000,0.000000,0.000000,0.006000,0.000000,0.000000,0.055000,0.000000,0.000000,0.000000,0.153000,0.000000,0.000000
01.01.2021 05:15:00,0.062000,0.000000,0.000000,0.005000,0.000000,0.000000,0.017000,0.000000,0.000000,0.000000,0.084000,0.000000,0.000000
01.01.2021 05:30:00,0.099000,0.000000,0.000000,0.004000,0.000000,0.000000,0.021000,0.000000,0.000000,0.000000,0.124000,0.000000,0.000000
01.01.2021 05:45:00,0.083000,0.000000,0.000000,0.018000,0.000000,0.000000,0.020000,0.000000,0.000000,0.000000,0.121000,0.000000,0.000000
01.01.2021 06:00:00,0.092000,0.000000,0.000000,0.013000,0.000000,0.000000,0.016000,0.000000,0.000000,0.000000,0.121000,0.000000,0.000000
01.01.2021 06:15:00,0.058000,0.000000,0.000000,0.002000,0.000000,0.000000,0.016000,0.000000,0.000000,0.000000,0.076000,0.000000,0.000000
01.01.2021 06:30:00,0.104000,0.000000,0.000000,0.002000,0.000000,0.000000,0.016000,0.000000,0.000000,0.000000,0.122000,0.000000,0.000000
01.01.2021 06:45:00,0.062000,0.000000,0.000000,0.002000,0.000000,0.000000,0.016000,0.000000,0.000000,0.000000,0.080000,0.000000,0.000000
01.01.2021 07:00:00,0.063000,0.000000,0.000000,0.002000,0.000000,0.000000,0.016000,0.000000,0.000000,0.000000,0.081000,0.000000,0.000000
01.01.2021 07:15:00,0.100000,0.000000,0.000000,0.008000,0.000000,0.000000,0.018000,0.000000,0.000000,0.000000,0.126000,0.000000,0.000000
01.01.2021 07:30:00,0.090000,0.000000,0.000000,0.018000,0.000000,0.000000,0.025000,0.000000,0.000000,0.000000,0.133000,0.000000,0.000000
01.01.2021 07:45:00,0.100000,0.000000,0.000000,0.006000,0.000000,0.000000,0.160000,0.000000,0.000000,0.000000,0.266000,0.000000,0.000000
01.01.2021 08:00:00,0.068000,0.000000,0.000000,0.002000,0.000000,0.000000,0.139000,0.000000,0.000000,0.000000,0.209000,0.000000,0.000000
"""

def read_data(data):
    """
   converts string to pandas dataframe
    """
    df = pd.DataFrame()
    for line in data.splitlines():
        if line.startswith("MeteringpointID"):
            continue
        df = df.append(dict(zip(line.split(",")[0].split("\t"), line.split(",")[1:])))

    df = df.apply(pd.to_numeric, errors='ignore')
    return df

def get_row_sums_as_series(dataframe):
    """
    converts dataframe to dict and sums values
    """
    row_sums = dataframe.apply(lambda x: x.sum(), axis=1)
    return row_sums


def get_column_names(dataframe):
    """
    get all column names
    """
    return dataframe.columns.to_list()


def get_column_sums_as_series(dataframe):
    """
    get sum of all columns
    """
    column_sums = dataframe.apply(lambda x: x.sum(), axis=0)
    return column_sums


def get_columns_sums_as_dict(dataframe):
    """
    get sum of all columns as dict
    """
    return get_column_sums_as_series(dataframe).to_dict()


def get_rows_sums_as_dict(dataframe):
    """
    get sum of all rows as dict
    """
    return get_row_sums_as_series(dataframe).to_dict()


def convert_dict_to_string(dictionary):
    """
    convert dictionary to string
    """
    return "\n".join(f"{k}\t{v}" for k, v in dictionary.items())


def write_file(filename, string):
    """
    write string to file
    """
    with open(filename, "w") as f:
        f.write(string)


if __name__ == "__main__":
    df = read_data(data)

    # create dict with all values
    dict_values = get_rows_sums_as_dict(df)
    # create dict with all column names
    dict_columns = get_columns_sums_as_dict(df)
    dict_column_names = get_column_names(df)

    # write to files
    write_file("dict_values", convert_dict_to_string(dict_values))
    write_file("dict_columns", convert_dict_to_string(dict_columns))
    write_file("dict_column_names", convert_dict_to_string(dict_column_names))